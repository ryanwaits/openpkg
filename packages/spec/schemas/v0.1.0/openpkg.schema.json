{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://unpkg.com/@openpkg-ts/spec/schemas/v0.1.0/openpkg.schema.json",
  "title": "OpenPkg Specification",
  "description": "Schema for OpenPkg specification files",
  "type": "object",
  "required": [
    "openpkg",
    "meta",
    "exports"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "Reference to the OpenPkg schema version",
      "pattern": "^(https://raw\\.githubusercontent\\.com/ryanwaits/openpkg/main/schemas/v[0-9]+\\.[0-9]+\\.[0-9]+/openpkg\\.schema\\.json|https://unpkg\\.com/@openpkg-ts/spec/schemas/v[0-9]+\\.[0-9]+\\.[0-9]+/openpkg\\.schema\\.json)$"
    },
    "openpkg": {
      "type": "string",
      "description": "OpenPkg specification version",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
      "const": "0.1.0"
    },
    "meta": {
      "type": "object",
      "description": "Package metadata",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Package name"
        },
        "version": {
          "type": "string",
          "description": "Package version"
        },
        "description": {
          "type": "string",
          "description": "Package description"
        },
        "license": {
          "type": "string",
          "description": "Package license"
        },
        "repository": {
          "type": "string",
          "description": "Repository URL"
        },
        "ecosystem": {
          "type": "string",
          "description": "Package ecosystem"
        }
      }
    },
    "exports": {
      "type": "array",
      "description": "List of exported items",
      "items": {
        "$ref": "#/$defs/export"
      }
    },
    "types": {
      "type": "array",
      "description": "List of type definitions",
      "items": {
        "$ref": "#/$defs/typeDef"
      }
    }
  },
  "$defs": {
    "export": {
      "type": "object",
      "required": [
        "id",
        "name",
        "kind"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the export"
        },
        "name": {
          "type": "string",
          "description": "Export name"
        },
        "kind": {
          "type": "string",
          "description": "Kind of export",
          "enum": [
            "function",
            "class",
            "variable",
            "interface",
            "type",
            "enum"
          ]
        },
        "description": {
          "type": "string",
          "description": "JSDoc/TSDoc description"
        },
        "examples": {
          "type": "array",
          "description": "Usage examples from documentation",
          "items": {
            "type": "string"
          }
        },
        "signatures": {
          "type": "array",
          "description": "Function/method signatures",
          "items": {
            "$ref": "#/$defs/signature"
          }
        },
        "type": {
          "description": "Type reference or inline schema for variables",
          "oneOf": [
            { "type": "string" },
            { "$ref": "#/$defs/schema" }
          ]
        },
        "members": {
          "type": "array",
          "description": "Class/interface/enum members",
          "items": { "type": "object" }
        },
        "tags": {
          "type": "array",
          "description": "JSDoc/TSDoc tags",
          "items": {
            "type": "object",
            "required": ["name", "text"],
            "properties": {
              "name": { "type": "string" },
              "text": { "type": "string" }
            },
            "additionalProperties": false
          }
        },
        "source": {
          "$ref": "#/$defs/sourceLocation"
        }
      }
    },
    "typeDef": {
      "type": "object",
      "required": [
        "id",
        "name",
        "kind"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the type"
        },
        "name": {
          "type": "string",
          "description": "Type name"
        },
        "kind": {
          "type": "string",
          "description": "Kind of type definition",
          "enum": [
            "interface",
            "type",
            "enum",
            "class"
          ]
        },
        "description": {
          "type": "string",
          "description": "JSDoc/TSDoc description"
        },
        "schema": {
          "$ref": "#/$defs/schema"
        },
        "type": {
          "type": "string",
          "description": "Type expression for type aliases"
        },
        "members": {
          "type": "array",
          "description": "Members for classes/interfaces/enums",
          "items": { "type": "object" }
        },
        "tags": {
          "type": "array",
          "description": "JSDoc/TSDoc tags",
          "items": {
            "type": "object",
            "required": ["name", "text"],
            "properties": {
              "name": { "type": "string" },
              "text": { "type": "string" }
            },
            "additionalProperties": false
          }
        },
        "source": {
          "$ref": "#/$defs/sourceLocation"
        }
      }
    },
    "signature": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/parameter"
          }
        },
        "returns": {
          "$ref": "#/$defs/returns"
        },
        "description": {
          "type": "string",
          "description": "Signature-level description"
        }
      }
    },
    "parameter": {
      "type": "object",
      "required": [
        "name",
        "required"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name"
        },
        "required": {
          "type": "boolean",
          "description": "Whether the parameter is required"
        },
        "schema": {
          "$ref": "#/$defs/schema"
        }
      }
    },
    "returns": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/$defs/schema"
        },
        "description": {
          "type": "string",
          "description": "Return value description"
        }
      }
    },
    "schema": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "$ref": {
              "type": "string",
              "description": "Reference to another type",
              "pattern": "^#/types/[A-Za-z0-9_.-]+$"
            }
          },
          "required": [
            "$ref"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "not": {
            "required": [
              "$ref"
            ]
          },
          "additionalProperties": true
        }
      ]
    },
    "sourceLocation": {
      "type": "object",
      "required": [
        "file",
        "line"
      ],
      "properties": {
        "file": {
          "type": "string",
          "description": "Source file path"
        },
        "line": {
          "type": "integer",
          "description": "Line number in source file",
          "minimum": 1
        }
      }
    }
  }
}
